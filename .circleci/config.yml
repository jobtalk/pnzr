version: 2

go1_10: &go1_10 
    working_directory: /go/src/github.com/jobtalk/pnzr
    docker:
        - image: golang:1.10.2
go1_9: &go1_9
    working_directory: /go/src/github.com/jobtalk/pnzr
    docker:
        - image: golang:1.9
go1_8: &go1_8
    working_directory: /go/src/github.com/jobtalk/pnzr
    docker:
        - image: golang:1.8

test_steps: &test_steps
    steps:
        - checkout
        - run:
            name: "setup"
            command: |
                go get github.com/Masterminds/glide
                go install github.com/Masterminds/glide
                go get -u github.com/golang/dep/cmd/dep
        - run:
            name: "Install packages"
            command: |
                dep ensure
        - run:
            name: "run test"
            command: |
                go test -cover $(glide novendor)
check_fmt: &check_fmt
    steps:
        - checkout
        - run:
            name: "setup"
            command: |
                go get github.com/Masterminds/glide
                go install github.com/Masterminds/glide
        - run:
            name: "check fmt"
            command: |
                if [ $(go fmt $(glide nv) | wc -l) -eq 0 ]; then
                    exit 0
                fi
                echo "Go fmt is not applied."
                exit 1
jobs:
    check_fmt:
        <<: *go1_10
        <<: *check_fmt

    test_1_10:
        <<: *go1_10
        <<: *test_steps
    test_1_9:
        <<: *go1_9
        <<: *test_steps
    test_1_8:
        <<: *go1_8
        <<: *test_steps

    build:
        <<: *go1_10
        steps:
            - checkout
            - run:
                name: "setup"
                command: |
                    go get github.com/Masterminds/glide
                    go install github.com/Masterminds/glide
                    go get -u github.com/golang/dep/cmd/dep

            - run:
                name: "Install github-release"
                command: |
                    go get github.com/aktau/github-release
                    go install github.com/aktau/github-release
            - run:
                name: "Install packages"
                command: |
                    dep ensure
            - run:
                name: "build pnzr"
                command: |
                    if [ "${CIRCLE_BRANCH}" == "master" ]; then
                        make
                    elif [[ "${CIRCLE_BRANCH}" =~ ^release-.* ]]; then
                        VERSION=${CIRCLE_BRANCH#release-} make
                    fi
            - deploy:
                name: "release release branch"
                command: |
                    if [[ "$CIRCLE_BRANCH" =~ ^release-.* ]]; then
                        VERSION=${CIRCLE_BRANCH#release-} make
                        VERSION=${CIRCLE_BRANCH#release-}
                        github-release release -u jobtalk -r pnzr -t "${VERSION}" -n "${VERSION}" -d "${VERSION}"
                        github-release upload -u jobtalk -r pnzr -t "${VERSION}" --name "pnzr-darwin-amd64" --file bin/darwin/pnzr
                        github-release upload -u jobtalk -r pnzr -t "${VERSION}" --name "pnzr-linux-amd64" --file bin/linux/pnzr
                    fi
workflows:
    version: 2
    apply:
        jobs:
            - check_fmt
            - test_1_10
            - test_1_9
            - test_1_8
            - build:
                requires:
                    - check_fmt
                    - test_1_10
                    - test_1_9
                    - test_1_8